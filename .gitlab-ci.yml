image: node:18-alpine

cache:
  paths:
  - node_modules/

stages:
  - git-clone-lambda-code
  - npm-install
  - build
  - deploy
#  - deploy-prod

git-clone-lambda-code:
  stage: git-clone-lambda-code
  image: alpine
  before_script:
    - apk add git
  script:
    - git clone --depth=1 -b main https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.com/serverless4741110/lambdas-src repository
    - rm -rf source_code/.git
    - cd repository
    - rm LICENSE
    - rm README.md
  artifacts:
    paths:
      - repository

npm-install:
  stage: npm-install
  before_script:
    - ls
    - npm --version
  script:
    - cd repository/src
    - npm install
  artifacts:
    paths:
      - repository

build-job:
  stage: build
  script:
  - echo "Compiling the code..."
  - npm install
  - npm run build
  - echo "Compile complete."

deploy-infra:
  stage: deploy
  variables:
    CDK_DEPLOY_ACCOUNT: $PROD_ACCOUNT_ID
    CDK_DEPLOY_REGION: $AWS_PROD_REGION
  before_script:
  - npm install -g aws-cdk@latest
  - cdk --version
  script:
  - printenv
  - npx cdk synth
  - cdk diff
  - cdk deploy --require-approval never

# deploy-prod-infra:
#   stage: deploy-prod
#   variables:
#     CDK_DEPLOY_ACCOUNT: $PROD_ACCOUNT_ID
#     CDK_DEPLOY_REGION: $AWS_PROD_REGION
#   before_script:
#   - npm install -g aws-cdk@latest
#   - cdk --version
#   script:
#   - npx cdk synth
#   - cdk diff
#   - cdk deploy --require-approval never
#   rules:
#   - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
#     when: manual